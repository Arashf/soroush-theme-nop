@model CustomerNavigationModel
@* <div class="select-navigation mobile"> *@
@*      @{ ViewBag.IsMobile = true; } *@
@*     <select id="select-nav" name="select-nav" onchange="setLocation(this.value);"> *@
@*         @await Component.InvokeAsync("Widget", new { widgetZone = "account_navigation_before" }) *@
@* *@
@*         @foreach (var item in Model.CustomerNavigationItems) *@
@*         { *@
@*             if (Model.SelectedTab == item.Tab) *@
@*             { *@
@*                 <option selected="selected" value="@Url.RouteUrl(item.RouteName)">@item.Title</option> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <option value="@Url.RouteUrl(item.RouteName)">@item.Title</option> *@
@*             } *@
@*         } *@
@* *@
@*         @await Component.InvokeAsync("Widget", new { widgetZone = "account_navigation_after" }) *@
@*     </select> *@
@*     <script type="text/javascript" asp-location="Footer"> *@
@*         $(document).ready(function () { *@
@*             $("#select-nav").each(function () { *@
@*                 $(this).val($(this).find('option[selected]').val()); *@
@*             }); *@
@*         }); *@
@*     </script>      *@
@* </div> *@

@* <div class="block block-account-navigation desktop"> *@
@*     @{ ViewBag.IsMobile = null; } *@
@*     <div class="title"> *@
@*         <strong>@T("Account.Navigation")</strong> *@
@*     </div> *@
@*     <div class="listbox"> *@
@*         <ul class="list"> *@
@*             @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationBefore, additionalData = Model }) *@
@*             @foreach (var item in Model.CustomerNavigationItems) *@
@*             { *@
@*                 <li class="@item.ItemClass @(Model.SelectedTab == item.Tab ? "active" : "inactive")"> *@
@*                     <a href="@Url.RouteUrl(item.RouteName)" data-hover="@(item.Title)">@(item.Title)</a> *@
@*                 </li> *@
@*             } *@
@*             @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.AccountNavigationAfter, additionalData = Model }) *@
@*         </ul> *@
@*     </div> *@
@* </div> *@
