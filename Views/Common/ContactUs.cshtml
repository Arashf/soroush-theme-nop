@model ContactUsModel
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.ContactUs").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-contact-page");
}
<div class="contact-us contact-us-containerCentered container-base page contact-page">
    <div class="contact-us-container">
        <div class="page-title">
            <h1>@T("PageTitle.ContactUs")</h1>
        </div>
        <div class="product-prices-box border-t-[1px] border-solid border-borderPrimary my-seperate"></div>
        <div class="page-body">
            @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "ContactUs" })
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContactUsTop, additionalData = Model })
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                <div class="contact-us-form">
                    <form asp-route="ContactUs" method="post">
                        <div asp-validation-summary="ModelOnly" class="message-error"></div>
                        <div class="fieldset">
                            <div class="form-fields">
                                <div class="inputs">
                                    <label asp-for="FullName" asp-postfix=":"></label>
                                    <div>
                                        <input asp-for="FullName" placeholder="@T("ContactUs.FullName.Hint")" class="fullname"/>
                                        <nop-required/>
                                    </div>
                                    <span asp-validation-for="FullName"></span>
                                </div>
                                <div class="inputs">
                                    <label asp-for="Email" asp-postfix=":"></label>
                                    <div>
                                        <input asp-for="Email" placeholder="@T("ContactUs.Email.Hint")" class="email"/>
                                        <nop-required/>
                                    </div>
                                    <span asp-validation-for="Email"></span>
                                </div>
                                @if (Model.SubjectEnabled)
                                {
                                    <div class="inputs">
                                        <label asp-for="Subject" asp-postfix=":"></label>
                                        <div>
                                            <input asp-for="Subject" placeholder="@T("ContactUs.Subject.Hint")" class="subject"/>
                                            <nop-required/>
                                        </div>
                                        <span asp-validation-for="Subject"></span>
                                    </div>
                                }
                                <div class="inputs">
                                    <label asp-for="Enquiry" asp-postfix=":"></label>
                                    <div>
                                        <textarea asp-for="Enquiry" placeholder="@T("ContactUs.Enquiry.Hint")" class="enquiry"></textarea>
                                        <nop-required/>
                                    </div>
                                    <span asp-validation-for="Enquiry"></span>
                                </div>
                                @if (Model.DisplayCaptcha)
                                {
                                    <nop-captcha/>
                                }
                            </div>
                        </div>
                        <div class="buttons">
                            <button type="submit" name="send-email" class="button-1 contact-us-button">@T("ContactUs.Button")</button>
                        </div>
                    </form>
                </div>
            }
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContactUsBottom, additionalData = Model })
        </div>
    </div>
</div>