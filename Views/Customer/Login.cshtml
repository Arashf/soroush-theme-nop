@model LoginModel
@using Nop.Core
@using Nop.Core.Domain.Customers

@inject IWebHelper webHelper
@{
    bool isCalledAsHeaderPanel = !string.IsNullOrEmpty(this.Context.Request.Query["isHeaderPanel"]);
    Layout = isCalledAsHeaderPanel ? "" : "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] }, webHelper.GetCurrentRequestProtocol());
}
@* <div class="page login-page"> *@
@*     <div class="page-title"> *@
@*         <h1>@T("Account.Login.Welcome")</h1> *@
@*     </div> *@
@*     @await Html.PartialAsync("_ExternalAuthentication.Errors") *@
@*     <div class="page-body"> *@
@*         <div class="customer-blocks"> *@
@*             @if (Model.RegistrationType == UserRegistrationType.Disabled) *@
@*             { *@
@*                 <div class="new-wrapper"> *@
@*                     <div class="title"> *@
@*                         @T("Account.Register") *@
@*                     </div> *@
@*                     <div class="text"> *@
@*                         @T("Account.Register.Result.Disabled") *@
@*                     </div> *@
@*                 </div> *@
@*             } *@
@*             else if (Model.CheckoutAsGuest) *@
@*             { *@
@*                 <div class="new-wrapper checkout-as-guest-or-register-block"> *@
@*                     <div class="title"> *@
@*                         <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong> *@
@*                     </div> *@
@*                     <div class="text"> *@
@*                         @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" }) *@
@*                     </div> *@
@*                     <div class="buttons"> *@
@*                         <button type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'">@T("Account.Login.CheckoutAsGuest")</button> *@
@*                         <button type="button" class="button-1 register-button" onclick="location.href='@registerUrl'">@T("Account.Register")</button> *@
@*                     </div> *@
@*                 </div> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <div class="new-wrapper register-block"> *@
@*                     <div class="title"> *@
@*                         <strong>@T("Account.Login.NewCustomer")</strong> *@
@*                     </div> *@
@*                     <div class="text"> *@
@*                         @T("Account.Login.NewCustomerText") *@
@*                     </div> *@
@*                     <div class="buttons"> *@
@*                         <button type="button" class="button-1 register-button" onclick="location.href='@registerUrl'">@T("Account.Register")</button> *@
@*                     </div> *@
@*                 </div> *@
@*             } *@
@*             <div class="returning-wrapper fieldset"> *@
@*                 <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off"> *@
@*                     <div class="title"> *@
@*                         <strong>@T("Account.Login.ReturningCustomer")</strong> *@
@*                     </div> *@
@*                     <div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div> *@
@*                     <div class="form-fields"> *@
@*                         @if (Model.UsernamesEnabled) *@
@*                         { *@
@*                             <div class="inputs"> *@
@*                                 <label asp-for="Username" asp-postfix=":"></label> *@
@*                                 <input asp-for="Username" class="username" autofocus="autofocus" /> *@
@*                                 <span class="inputs-icons">&#x61;</span> *@
@*                                 <span asp-validation-for="Username"></span> *@
@*                             </div> *@
@*                         } *@
@*                         else *@
@*                         { *@
@*                             <div class="inputs"> *@
@*                                 <label asp-for="Email" asp-postfix=":"></label> *@
@*                                 <input asp-for="Email" class="email" autofocus="autofocus" /> *@
@*                                 <span class="inputs-icons">&#x41;</span> *@
@*                                 <span asp-validation-for="Email"></span> *@
@*                             </div> *@
@*                         } *@
@*                         <div class="inputs"> *@
@*                             <label asp-for="Password" asp-postfix=":"></label> *@
@*                             <input asp-for="Password" class="password" /> *@
@*                             <span class="inputs-icons">&#x78;</span> *@
@*                             <span asp-validation-for="Password"></span> *@
@*                         </div> *@
@*                         <div class="inputs reversed"> *@
@*                             <span class="forgot-password"> *@
@*                                 <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a> *@
@*                             </span> *@
@*                             <input asp-for="RememberMe" /> *@
@*                             <label asp-for="RememberMe"></label> *@
@*                         </div> *@
@*                         @if (Model.DisplayCaptcha) *@
@*                         { *@
@*                             <nop-captcha /> *@
@*                         } *@
@*                     </div> *@
@*                     <div class="buttons"> *@
@*                         <button type="submit" class="button-1 login-button">@T("Account.Login.LoginButton")</button> *@
@*                     </div> *@
@*                     <div class="in-header-register"> *@
@*                         <button type="button" class="button-1 register-button" onclick="location.href='@registerUrl'">@T("Account.Register")</button> *@
@*                     </div> *@
@*                 </form> *@
@*                 <div class="external-authentication"> *@
@*                     @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication") *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@* *@
@*         @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" }) *@
@*     </div> *@
@* </div> *@

<div class="container-base loginpage-container">
    @* Loading Overly Page *@
    <div class="loginBox">
        <div class="backTo-register">
            <svg width="20" height="20" class="fill-zinc-500 stroke-zinc-500"  viewBox="0 0 96 96" xmlns="http://www.w3.org/2000/svg">
                <title/>
                <path d="M69.8437,43.3876,33.8422,13.3863a6.0035,6.0035,0,0,0-7.6878,9.223l30.47,25.39-30.47,25.39a6.0035,6.0035,0,0,0,7.6878,9.2231L69.8437,52.6106a6.0091,6.0091,0,0,0,0-9.223Z"/>
            </svg>
        </div>
        <div class="container-base">
            <div class="login-box-logo flex justify-center items-center py-[20px]">
                <div class="w-[150px]">
                    <a href="/">
                        <img src="https://soroush.app/images/thumbs/004/0045278_LOGO%20SOROUSH%20APP.png"
                             alt="logo" loading="lazy" width="100%" height="100%">
                    </a>
                </div>
            </div>
            <div class="mt-[40px]">
                <form id="registerForm">
                    <div class="mb-4">
                        <div class="register-state">
                            <div class="conform-numberbox logInElementState flex-nowrap lg:flex items-center text-[14px] lg:text[15px]">
                                <p>
                                    <span>کد تایید به شماره</span>
                                    <span class="phoneNo px-2 text-primary">

                                    </span>
                                    <span>ارسال شد.</span>
                                </p>
                                <p
                                    class="editPhonenumber pr-1 text-[12px] text-secondary cursor-pointer">
                                    ویرایش شماره
                                </p>
                            </div>
                            <span class="login-inputBox">
                                شماره موبایل خود را وارد کنید
                            </span>
                        </div>
                    </div>
                    <div class="phoneNumberBox">
                        <div class="inputs">
                            <input id="phoneNumber" placeholder="شماره موبایل"/>
                        </div>
                        <div class="login-errorbox w-full flex">
                            @* //////////////////////// PhoneNumber Error *@
                            <p class="text-red-600 text-[14px] py-[10px] pr-2">
                            </p>
                        </div>
                    </div>
                    <div class="verification-code-input logInElementState mt-[40px]">
                        <div class="code-input-item flex justify-center items-center gap-1">
                            <input type="tel" maxlength="1" pattern="[0-9]" class="form-control">
                            <input type="tel" maxlength="1" pattern="[0-9]" class="form-control">
                            <input type="tel" maxlength="1" pattern="[0-9]" class="form-control">
                            <input type="tel" maxlength="1" pattern="[0-9]" class="form-control">
                        </div>
                    </div>

                    <div class="verification-code-counter flex justify-center items-center my-3 mt-[30px] logInElementState">
                        <div class="flex items-center gap-2 mt-[20px]">
                            <div class="resend-code-counter">
                                <span id="countdowntimer"></span>
                                <span class="text-[13px]">
                                    ثانیه تا ارسال مجدد کد
                                </span>
                            </div>
                            <div>
                                <span
                                    class="resend-code text-secondary text-[15px] cursor-pointer"
                                    onClick="handleResendCode()">

                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="mb-[40px] mt-[60px]">
                        <div class="buttons">
                            @* <button type="submit" class="button-1 contact-us-button"> *@
                            @*     <span class="sendbtntitle">ارسال</span> *@
                            @*     <div class="relative flex justify-center items-center"> *@
                            @*         <div class="spin"></div> *@
                            @*     </div> *@
                            @* </button> *@
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="loginpage-svg"> 
        <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" width="100%" height="400" viewBox="0 0 869.99994 520.13854" xmlns:xlink="http://www.w3.org/1999/xlink">
            <path d="M831.09242,704.18737c-11.13833-9.4118-17.90393-24.27967-16.12965-38.75366s12.76358-27.78,27.01831-30.85364,30.50415,5.43465,34.83378,19.3594c2.3828-26.84637,5.12854-54.81757,19.40179-77.67976,12.92407-20.70115,35.3088-35.51364,59.5688-38.16357s49.80265,7.35859,64.93272,26.50671,18.83461,46.98549,8.2379,68.96911c-7.80623,16.19456-22.188,28.24676-37.2566,38.05184a240.45181,240.45181,0,0,1-164.45376,35.97709Z" transform="translate(-165.00003 -189.93073)" fill="#f2f2f2"/>
            <path d="M996.72788,546.00953a393.41394,393.41394,0,0,0-54.82622,54.44229,394.561,394.561,0,0,0-61.752,103.194c-1.112,2.72484,3.31272,3.911,4.4123,1.21642A392.34209,392.34209,0,0,1,999.96343,549.24507c2.28437-1.86015-.97-5.08035-3.23555-3.23554Z" transform="translate(-165.00003 -189.93073)" fill="#fff"/><path d="M445.06712,701.63014c15.2985-12.92712,24.591-33.34815,22.15408-53.22817s-17.53079-38.15588-37.10966-42.37749-41.89745,7.46449-47.8442,26.59014c-3.27278-36.87349-7.04406-75.29195-26.64837-106.69317-17.75122-28.433-48.49666-48.778-81.81777-52.41768s-68.40395,10.107-89.18511,36.407-25.86934,64.53459-11.31476,94.72909c10.72185,22.24324,30.47528,38.79693,51.17195,52.26422,66.02954,42.9653,147.93912,60.88443,225.8773,49.41454" transform="translate(-165.00003 -189.93073)" fill="#f2f2f2"/><path d="M217.56676,484.37281a540.35491,540.35491,0,0,1,75.30383,74.77651A548.0761,548.0761,0,0,1,352.25665,647.04a545.835,545.835,0,0,1,25.43041,53.8463c1.52726,3.74257-4.55,5.37169-6.06031,1.67075a536.35952,536.35952,0,0,0-49.009-92.727A539.73411,539.73411,0,0,0,256.889,528.63168a538.44066,538.44066,0,0,0-43.76626-39.81484c-3.13759-2.55492,1.33232-6.97788,4.444-4.444Z" transform="translate(-165.00003 -189.93073)" fill="#fff"/><path d="M789.5,708.93073h-365v-374.5c0-79.67773,64.82227-144.5,144.49976-144.5h76.00049c79.67749,0,144.49975,64.82227,144.49975,144.5Z" transform="translate(-165.00003 -189.93073)" fill="#f2f2f2"/><path d="M713.5,708.93073h-289v-374.5a143.38177,143.38177,0,0,1,27.59571-84.94434c.66381-.90478,1.32592-1.79785,2.00878-2.68115a144.46633,144.46633,0,0,1,30.75415-29.85058c.65967-.48,1.322-.95166,1.99415-1.42334a144.15958,144.15958,0,0,1,31.47216-16.459c.66089-.25049,1.33374-.50146,2.00659-.74219a144.01979,144.01979,0,0,1,31.1084-7.33593c.65772-.08985,1.333-.16016,2.0083-.23047a146.28769,146.28769,0,0,1,31.10547,0c.67334.07031,1.34864.14062,2.01416.23144a143.995,143.995,0,0,1,31.10034,7.335c.6731.24073,1.346.4917,2.00879.74268a143.79947,143.79947,0,0,1,31.10645,16.21582c.67163.46143,1.344.93311,2.00635,1.40478a145.987,145.987,0,0,1,18.38354,15.564,144.305,144.305,0,0,1,12.72437,14.55078c.68066.88037,1.34277,1.77344,2.00537,2.67676A143.38227,143.38227,0,0,1,713.5,334.43073Z" transform="translate(-165.00003 -189.93073)" fill="#ccc"/><circle cx="524.99994" cy="335.5" r="16" fill="#f30235"/><polygon points="594.599 507.783 582.339 507.783 576.506 460.495 594.601 460.496 594.599 507.783" fill="#ffb8b8"/><path d="M573.58165,504.27982h23.64384a0,0,0,0,1,0,0v14.88687a0,0,0,0,1,0,0H558.69478a0,0,0,0,1,0,0v0a14.88688,14.88688,0,0,1,14.88688-14.88688Z" fill="#2f2e41"/><polygon points="655.599 507.783 643.339 507.783 637.506 460.495 655.601 460.496 655.599 507.783" fill="#ffb8b8"/><path d="M634.58165,504.27982h23.64384a0,0,0,0,1,0,0v14.88687a0,0,0,0,1,0,0H619.69478a0,0,0,0,1,0,0v0a14.88688,14.88688,0,0,1,14.88688-14.88688Z" fill="#2f2e41"/>
            <path d="M698.09758,528.60035a10.74272,10.74272,0,0,1,4.51052-15.84307l41.67577-114.86667L764.791,409.082,717.20624,518.85271a10.80091,10.80091,0,0,1-19.10866,9.74764Z" transform="translate(-165.00003 -189.93073)" fill="#ffb8b8"/><path d="M814.33644,550.1843a10.74269,10.74269,0,0,1-2.89305-16.21659L798.53263,412.4583l23.33776,1.06622L827.23606,533.045a10.80091,10.80091,0,0,1-12.89962,17.13934Z" transform="translate(-165.00003 -189.93073)" fill="#ffb8b8"/><circle cx="612.1058" cy="162.12254" r="24.56103" fill="#ffb8b8"/><path d="M814.17958,522.54937H740.13271l.08911-.57617c.13306-.86133,13.19678-86.439,3.56177-114.436a11.813,11.813,0,0,1,6.06933-14.5835h.00025c13.77173-6.48535,40.20752-14.47119,62.52,4.90918a28.23448,28.23448,0,0,1,9.45947,23.396Z" transform="translate(-165.00003 -189.93073)" fill="#f30235"/><path d="M754.35439,448.1812,721.01772,441.418l15.62622-37.02978a13.99723,13.99723,0,0,1,27.10571,6.99755Z" transform="translate(-165.00003 -189.93073)" fill="#f30235"/><path d="M797.05043,460.73882l-2.00415-45.94141c-1.51977-8.63623,3.42408-16.80029,11.02735-18.13476,7.60547-1.32959,15.03174,4.66016,16.55835,13.35986l7.533,42.92774Z" transform="translate(-165.00003 -189.93073)" fill="#f30235"/><path d="M811.71606,517.04933c11.91455,45.37671,13.21436,103.0694,10,166l-16-2-29-120-16,122-18-1c-5.37744-66.02972-10.61328-122.71527-2-160Z" transform="translate(-165.00003 -189.93073)" fill="#2f2e41"/><path d="M793.2891,371.03474c-4.582,4.88079-13.09131,2.26067-13.68835-4.40717a8.05467,8.05467,0,0,1,.01014-1.55569c.30826-2.95357,2.01461-5.63506,1.60587-8.7536a4.59046,4.59046,0,0,0-.84011-2.14892c-3.65124-4.88933-12.22227,2.18687-15.6682-2.23929-2.113-2.714.3708-6.98713-1.25065-10.02051-2.14006-4.00358-8.47881-2.0286-12.45388-4.22116-4.42275-2.43948-4.15822-9.22524-1.24686-13.35269,3.55052-5.03359,9.77572-7.71951,15.92336-8.10661s12.25292,1.27475,17.99229,3.51145c6.52109,2.54134,12.98768,6.05351,17.00067,11.78753,4.88021,6.97317,5.34986,16.34793,2.90917,24.50174C802.09785,360.98987,797.03077,367.04906,793.2891,371.03474Z" transform="translate(-165.00003 -189.93073)" fill="#2f2e41"/><path d="M1004.98163,709.57417h-738.294a1.19069,1.19069,0,0,1,0-2.38137h738.294a1.19069,1.19069,0,0,1,0,2.38137Z" transform="translate(-165.00003 -189.93073)" fill="#3f3d56"/><path d="M634,600.43073H504a6.46539,6.46539,0,0,1-6.5-6.41531V303.846a6.46539,6.46539,0,0,1,6.5-6.41531H634a6.46539,6.46539,0,0,1,6.5,6.41531V594.01542A6.46539,6.46539,0,0,1,634,600.43073Z" transform="translate(-165.00003 -189.93073)" fill="#fff"/><rect x="332.49994" y="201.38965" width="143" height="2" fill="#ccc"/><rect x="332.99994" y="315.5" width="143" height="2" fill="#ccc"/><rect x="377.49994" y="107.5" width="2" height="304" fill="#ccc"/><rect x="427.49994" y="107.5" width="2" height="304" fill="#ccc"/></svg>
    </div>
        
    
</div>
  

<script asp-location="Footer">

function resendVerificationCode(){
    let counter = 10
        var downloadTimer = setInterval(function(){
       counter--;
        document.getElementById("countdowntimer").textContent = counter;
        if(counter <= 0){
            document.querySelector('.resend-code-counter').style.display = 'none'
            document.querySelector(".resend-code").classList.add('resend-code-show');
            document.querySelector(".resend-code").innerHTML = ' ارسال مجدد کد'
            clearInterval(downloadTimer);
       
               }
        },1000);
}
function handleResendCode(){
     resendVerificationCode()
     document.querySelector('.resend-code-counter').style.display = 'block'
      document.querySelector(".resend-code").classList.remove('resend-code-show');
     document.querySelector(".resend-code").innerHTML = ''
    
}
    
 let registerForm = document.getElementById("registerForm");   
 let verficationCodeInput = ''     

 let changeInputState = document.getElementById("phoneNumber");
 changeInputState.addEventListener('input', (event)=> {
 let phoneNo = document.getElementById("phoneNumber").value
   let setError = document.querySelector(".login-errorbox p");
  phoneNo.length === 0 ? setError.classList.remove('show-login-errorbox')  : ''
   // setError.classList.remove('show-login-errorbox')
  
    })
 ///////////////////////////////////////////////////////// Register Form Action 
 registerForm.addEventListener('submit', (event)=> {
  event.preventDefault()
  // document.querySelector(".registerpage-overlay").classList.add('loading-spinner')
  let parsToEnglish= ""
  let phoneNo = document.getElementById("phoneNumber").value; 
  let setError = document.querySelector(".login-errorbox p");
 
      
   // let emailReg = '[-0-9a-zA-Z.+_]+@@[-0-9a-zA-Z.+_]+\.[a-zA-Z]{2,4}';
   // let regexPhone = /(09)\d{9}/gm; // /(\+989|9|09)(12|19|35|36|37|38|39|32)\d{7}/gm;
   let regexPhone = !/^(?:\+98|0098|98|0)?9\d{9}$/; // /(\+989|9|09)(12|19|35|36|37|38|39|32)\d{7}/gm;
     
   
    if (phoneNo.length <= 10 || phoneNo === null) {
      console.log("PhoneNumber Incorrent");
      setError.innerHTML=' لطفا شماره موبایل را به صورت صحیح وارد کنید.'
      setError.classList.add('show-login-errorbox')
      return;
    }
    
     parsToEnglish = convertPersianNumber(phoneNo);
    
    
    if (!parsToEnglish.match(parsToEnglish)) {
      console.log("PhoneNumber RegexIncorrent");
      setError.innerHTML=' لطفا شماره موبایل را به صورت صحیح وارد کنید.'
      setError.classList.add('show-login-errorbox')
      return;
    }
        document.querySelector(".phoneNumberBox").style.display = "none"
        document.querySelector(".login-inputBox").style.display = "none"
         
    try {
      // var data = new FormData();
      // data.append("mobile", phoneNo);
      // data.append("levelNo", "1");
      // data.append("ReturnUrl", "");
      // const response = await api.post("Otp/OtpLoginFull", data);
      // const response = {data: {Success: true,}, };
      // console.log(response.data);
      if (response.data.Success === true) {
        // console.log("response.data.success");
        // document.querySelector("#login-step-1").style.display = "none";
        // document.querySelector("#login-step-2").style.display = "block";
        // document.querySelector("#time-remained").style.display = "block";
        // document.querySelector("#resend").style.display = "none";
        // step2();
        // setSeconds(60);
        //
        // intervalID = setInterval(() => {
        //   setSeconds((second) => second - 1);
        // }, 1000);
      } else {
      }
    } catch (error) {
    } finally {
        document.querySelector('.phoneNo').innerHTML = phoneNo
        document.querySelector(".verification-code-input").classList.remove('logInElementState')
        document.querySelector('.conform-numberbox').classList.remove('logInElementState')
        document.querySelector(".verification-code-counter").classList.remove('logInElementState')
        document.querySelectorAll(".form-control")[0].focus()
       
        // document.querySelector(".registerpage-overlay").classList.remove('loading-spinner')
        resendVerificationCode()
    }
  })

//////////////////////////////////////////////////// Convert Number to English
function convertPersianNumber(value){
     const persianNumber =['۰','۱','۲','۳','۴','۵','۶','۷','۸','۹']
        const englishNumber =['0','1','2','3','4','5','6','7','8','9']
        return value.replace(/[0-9]/g,(w)=> persianNumber[englishNumber.indexOf(w)])
}
///////////////////////////////////////////////////////////////////////// Verification Code Input

const form = document.querySelector('.code-input-item')
const inputs = form.querySelectorAll('input')
const KEYBOARDS = {
  backspace: 8,
  arrowLeft: 37,
  arrowRight: 39,
}

function handleInput(e) {
  const input = e.target
    verficationCodeInput = verficationCodeInput + input.value
  const nextInput = input.nextElementSibling
  if (nextInput && input.value) {
    nextInput.focus()
    if (nextInput.value) {
      nextInput.select()
    }
  }
}

function handlePaste(e) {
  e.preventDefault()
  const paste = e.clipboardData.getData('text')
  inputs.forEach((input, i) => {
    input.value = paste[i] || ''
  })
}

function handleBackspace(e) { 
 verficationCodeInput= ""
  const input = e.target
  if (input.value) {
    input.value = ''
    return
  }
  
  input.previousElementSibling.focus()
}

function handleArrowLeft(e) {
  const previousInput = e.target.previousElementSibling
  if (!previousInput) return
  previousInput.focus()
}

function handleArrowRight(e) {
  const nextInput = e.target.nextElementSibling
  if (!nextInput) return
  nextInput.focus()
}

form.addEventListener('input', handleInput)
inputs[0].addEventListener('paste', handlePaste)

inputs.forEach(input => {
  input.addEventListener('focus', e => {
    setTimeout(() => {
      e.target.select()
    }, 0)
  })
  
  input.addEventListener('keydown', e => {
    switch(e.keyCode) {
      case KEYBOARDS.backspace:
        handleBackspace(e)
        break
      case KEYBOARDS.arrowLeft:
        handleArrowLeft(e)
        break
      case KEYBOARDS.arrowRight:
        handleArrowRight(e)
        break
      default:  
    }
  })
})

</script>