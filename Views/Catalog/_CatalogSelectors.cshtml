@model CatalogProductsModel

@if (Model.Products.Count <= 0 &&
     !Model.PriceRangeFilter.Enabled &&
     !Model.SpecificationFilter.Enabled &&
     !Model.ManufacturerFilter.Enabled)
{
    return;
}

<div class="flex justify-between items-center px-2 pt-3 product-selectors">
    @* <div class="filters-button-wrapper"> *@
    @*     <button class="filters-button">@T("SevenSpikes.Themes.Emporium.Common.Filter")</button> *@
    @* </div> *@

    @if (Model.AllowProductViewModeChanging)
    {
        @* <div class="product-viewmode"> *@
        @*     <span>@T("Catalog.ViewMode")</span> *@
        @*     @if (Model.AvailableViewModes.Count > 1) *@
        @*     { *@
        @*         var gridMode = Model.AvailableViewModes[0]; *@
        @*         var listMode = Model.AvailableViewModes[1]; *@
        @* *@
        @*         <a class="viewmode-icon grid @if (gridMode.Selected){<text>selected</text>}" data-viewmode="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a> *@
        @*         <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" data-viewmode="@listMode.Value" title="@listMode.Text">@listMode.Text</a> *@
        @*     } *@
        @* </div> *@
        <script asp-location="Footer">
            $(document).ready(function () {
                var $viewModeEls = $('[data-viewmode]');
                $viewModeEls.on('click', function () {
                    if (!$(this).hasClass('selected')) {
                        $viewModeEls.toggleClass('selected');
                        CatalogProducts.getProducts();
                    }
                    return false;
                });
    
                $(CatalogProducts).on('before', function (e) {
                    var $viewModeEl = $('[data-viewmode].selected');
                    if ($viewModeEl) {
                        e.payload.urlBuilder
                            .addParameter('viewmode', $viewModeEl.data('viewmode'));
                    }
                });
            });
        </script>
    }

    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            @* <span>@T("Catalog.OrderBy")</span> *@
                <svg height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="m6 20 4-4H7V4H5v12H2zm5-12h9v2h-9zm0 4h7v2h-7zm0-8h11v2H11zm0 12h5v2h-5z" />
                </svg>
            @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { aria_label = T("Catalog.OrderBy.Label") })
             <span>
                <svg class="feather feather-chevron-down" fill="none" width="20" height="20" stroke="#515151" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><polyline points="6 9 12 15 18 9"/></svg>
              </span>
        </div>

        <script asp-location="Footer">
            $(document).ready(function () {
                var $orderByEl = $('#products-orderby');
                $orderByEl.on('change', function () {
                    CatalogProducts.getProducts();
                });

                $(CatalogProducts).on('before', function (e) {
                    e.payload.urlBuilder
                        .addParameter('orderby', $orderByEl.val());
                });
                 //////////////////////////////////////////////// Add Icon to DropDownSelect Sort
                 //  var $dropDownIcon = $('.product-sorting'); 
                
            });
           
            
        </script>
    }

    @if (Model.AllowCustomersToSelectPageSize)
    {
        @* <div class="product-page-size"> *@
        @*     <span>@T("Catalog.PageSize")</span> *@
        @*     @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { aria_label = T("Catalog.PageSize.Label") }) *@
        @*     <span>@T("Catalog.PageSize.PerPage")</span> *@
        @* </div> *@
        @* <script asp-location="Footer"> *@
        @*     $(document).ready(function () { *@
        @*         var $pageSizeEl = $('#products-pagesize'); *@
        @*         $pageSizeEl.on('change', function () { *@
        @*             CatalogProducts.getProducts(); *@
        @*         }); *@
        @* *@
        @*         $(CatalogProducts).on('before', function (e) { *@
        @*             e.payload.urlBuilder *@
        @*                 .addParameter('pagesize', $pageSizeEl.val()); *@
        @*         }); *@
        @*     }); *@
        @* </script> *@
    }
    <div id="opentogglefilter" class="filterToggle lg:hidden  w-[120px] justify-end" onclick="openFilternav()">
        <img class="w-[30px]" src="~/Themes/Emporium/Content/icons/filter.svg"/>
        <span>فیلترها</span>
    </div>
</div>