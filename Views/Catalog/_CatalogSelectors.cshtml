@model CatalogProductsModel

@if (Model.Products.Count <= 0 &&
     !Model.PriceRangeFilter.Enabled &&
     !Model.SpecificationFilter.Enabled &&
     !Model.ManufacturerFilter.Enabled)
{
    return;
}

<div class="flex justify-between items-center product-selectors">
    @* <div class="filters-button-wrapper"> *@
    @*     <button class="filters-button">@T("SevenSpikes.Themes.Emporium.Common.Filter")</button> *@
    @* </div> *@

    @* @if (Model.AllowProductViewModeChanging) *@
    @* { *@
    @*     <div class="product-viewmode"> *@
    @*         <span>@T("Catalog.ViewMode")</span> *@
    @*         @if (Model.AvailableViewModes.Count > 1) *@
    @*         { *@
    @*             var gridMode = Model.AvailableViewModes[0]; *@
    @*             var listMode = Model.AvailableViewModes[1]; *@
    @* *@
    @*             <a class="viewmode-icon grid @if (gridMode.Selected){<text>selected</text>}" data-viewmode="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a> *@
    @*             <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" data-viewmode="@listMode.Value" title="@listMode.Text">@listMode.Text</a> *@
    @*         } *@
    @*     </div> *@
    @*     <script asp-location="Footer"> *@
    @*         $(document).ready(function () { *@
    @*             var $viewModeEls = $('[data-viewmode]'); *@
    @*             $viewModeEls.on('click', function () { *@
    @*                 if (!$(this).hasClass('selected')) { *@
    @*                     $viewModeEls.toggleClass('selected'); *@
    @*                     CatalogProducts.getProducts(); *@
    @*                 } *@
    @*                 return false; *@
    @*             }); *@
    @* *@
    @*             $(CatalogProducts).on('before', function (e) { *@
    @*                 var $viewModeEl = $('[data-viewmode].selected'); *@
    @*                 if ($viewModeEl) { *@
    @*                     e.payload.urlBuilder *@
    @*                         .addParameter('viewmode', $viewModeEl.data('viewmode')); *@
    @*                 } *@
    @*             }); *@
    @*         }); *@
    @*     </script> *@
    @* } *@

    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <span>@T("Catalog.OrderBy")</span>
            @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { aria_label = T("Catalog.OrderBy.Label") })
        </div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $orderByEl = $('#products-orderby');
                $orderByEl.on('change', function () {
                    CatalogProducts.getProducts();
                });

                $(CatalogProducts).on('before', function (e) {
                    e.payload.urlBuilder
                        .addParameter('orderby', $orderByEl.val());
                });
            });
        </script>
    }

    @if (Model.AllowCustomersToSelectPageSize)
    {
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { aria_label = T("Catalog.PageSize.Label") })
            <span>@T("Catalog.PageSize.PerPage")</span>
        </div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $pageSizeEl = $('#products-pagesize');
                $pageSizeEl.on('change', function () {
                    CatalogProducts.getProducts();
                });

                $(CatalogProducts).on('before', function (e) {
                    e.payload.urlBuilder
                        .addParameter('pagesize', $pageSizeEl.val());
                });
            });
        </script>
    }
     <div id="opentogglefilter" class="filterToggle lg:hidden  w-[120px] justify-end" onclick="openFilternav()">
                    <svg class="fill-iconSecondary stroke-iconSecondary stroke-3" height="26px" width="26px"
                        data-name="Layer 1" id="Layer_1" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                        <title />
                        <path d="M47,12a2,2,0,0,0-2-2H24a2,2,0,0,0,0,4H45A2,2,0,0,0,47,12Z" />
                        <path d="M3,14H8.35a6,6,0,1,0,0-4H3a2,2,0,0,0,0,4Zm11-4a2,2,0,1,1-2,2A2,2,0,0,1,14,10Z" />
                        <path d="M45,22H37.65a6,6,0,1,0,0,4H45a2,2,0,0,0,0-4ZM32,26a2,2,0,1,1,2-2A2,2,0,0,1,32,26Z" />
                        <path d="M22,22H3a2,2,0,0,0,0,4H22a2,2,0,0,0,0-4Z" />
                        <path d="M45,34H28a2,2,0,0,0,0,4H45a2,2,0,0,0,0-4Z" />
                        <path
                            d="M18,30a6,6,0,0,0-5.65,4H3a2,2,0,0,0,0,4h9.35A6,6,0,1,0,18,30Zm0,8a2,2,0,1,1,2-2A2,2,0,0,1,18,38Z" />
                    </svg>
                    <span>فیلترها</span>
                </div>
</div>